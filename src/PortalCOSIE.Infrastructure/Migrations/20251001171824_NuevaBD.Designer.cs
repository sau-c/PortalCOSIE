// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortalCOSIE.Infrastructure.Data;

#nullable disable

namespace PortalCOSIE.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251001171824_NuevaBD")]
    partial class NuevaBD
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PortalCOSIE.Domain.Entities.Alumno", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CarreraId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroBoleta")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PeriodoIngreso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarreraId");

                    b.HasIndex("NumeroBoleta")
                        .IsUnique();

                    b.ToTable("Alumno", (string)null);
                });

            modelBuilder.Entity("PortalCOSIE.Domain.Entities.Carrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Carrera", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Mecatrónica"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Telemática"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Biónica"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Energía"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "ISISA"
                        });
                });

            modelBuilder.Entity("PortalCOSIE.Domain.Entities.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TramiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TramiteId");

                    b.ToTable("Documento", (string)null);
                });

            modelBuilder.Entity("PortalCOSIE.Domain.Entities.Personal", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("IdPersonal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personal", (string)null);
                });

            modelBuilder.Entity("PortalCOSIE.Domain.Entities.Tramite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlumnoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaConclusion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlumnoId");

                    b.HasIndex("PersonalId");

                    b.ToTable("Tramite", (string)null);
                });

            modelBuilder.Entity("PortalCOSIE.Domain.Entities.UnidadAprendizaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarreraId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Semestre")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarreraId");

                    b.ToTable("UnidadAprendizaje", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarreraId = 2,
                            Nombre = "Programación",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 2,
                            CarreraId = 2,
                            Nombre = "Análisis y diseño de sistemas",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 3,
                            CarreraId = 2,
                            Nombre = "Estructura de datos",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 4,
                            CarreraId = 2,
                            Nombre = "Administración de sistemas operativos",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 5,
                            CarreraId = 2,
                            Nombre = "Diseño digital",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 6,
                            CarreraId = 2,
                            Nombre = "Arquitectura de computadoras",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 7,
                            CarreraId = 2,
                            Nombre = "Fundamentos de física",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 8,
                            CarreraId = 2,
                            Nombre = "Ecuaciones diferenciales",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 9,
                            CarreraId = 2,
                            Nombre = "Probabilidad",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 10,
                            CarreraId = 2,
                            Nombre = "Cálculo diferencial e integral",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 11,
                            CarreraId = 2,
                            Nombre = "Variable compleja",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 12,
                            CarreraId = 2,
                            Nombre = "Álgebra lineal",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 13,
                            CarreraId = 2,
                            Nombre = "Electromagnetismo",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 14,
                            CarreraId = 2,
                            Nombre = "Cálculo multivariable",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 15,
                            CarreraId = 2,
                            Nombre = "Administración organizacional",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 16,
                            CarreraId = 2,
                            Nombre = "Ética, profesión y sociedad",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 17,
                            CarreraId = 2,
                            Nombre = "Comunicación oral y escrita",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 18,
                            CarreraId = 2,
                            Nombre = "Inglés I",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 19,
                            CarreraId = 2,
                            Nombre = "Inglés II",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 20,
                            CarreraId = 2,
                            Nombre = "Programación estructurada",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 21,
                            CarreraId = 2,
                            Nombre = "Sociedad, ciencia y tecnología",
                            Semestre = 1
                        },
                        new
                        {
                            Id = 22,
                            CarreraId = 2,
                            Nombre = "Señales y sistemas",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 23,
                            CarreraId = 2,
                            Nombre = "Propagación de ondas electromagnéticas",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 24,
                            CarreraId = 2,
                            Nombre = "Electrónica",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 25,
                            CarreraId = 2,
                            Nombre = "Teoría de los circuitos",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 26,
                            CarreraId = 2,
                            Nombre = "Teoría de la información",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 27,
                            CarreraId = 2,
                            Nombre = "Teoría de las comunicaciones",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 28,
                            CarreraId = 2,
                            Nombre = "Comunicaciones digitales",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 29,
                            CarreraId = 2,
                            Nombre = "Procesamiento digital de señales",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 30,
                            CarreraId = 2,
                            Nombre = "Telefonía",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 31,
                            CarreraId = 2,
                            Nombre = "Sistemas celulares",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 32,
                            CarreraId = 2,
                            Nombre = "Protocolos de Internet",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 33,
                            CarreraId = 2,
                            Nombre = "Sistemas distribuidos",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 34,
                            CarreraId = 2,
                            Nombre = "Ingeniería web",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 35,
                            CarreraId = 2,
                            Nombre = "Programación avanzada",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 36,
                            CarreraId = 2,
                            Nombre = "Bases de datos",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 37,
                            CarreraId = 2,
                            Nombre = "Transmisión de datos",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 38,
                            CarreraId = 2,
                            Nombre = "Información financiera e ingeniería económica",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 39,
                            CarreraId = 2,
                            Nombre = "Optativa I",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 40,
                            CarreraId = 2,
                            Nombre = "Inglés III",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 41,
                            CarreraId = 2,
                            Nombre = "Métodos numéricos",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 42,
                            CarreraId = 2,
                            Nombre = "Electrónica para comunicaciones",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 43,
                            CarreraId = 2,
                            Nombre = "Óptica",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 44,
                            CarreraId = 2,
                            Nombre = "Desarrollo sustentable",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 45,
                            CarreraId = 2,
                            Nombre = "Economía para ingenieros",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 46,
                            CarreraId = 2,
                            Nombre = "Inglés IV",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 47,
                            CarreraId = 2,
                            Nombre = "Redes inalámbricas",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 48,
                            CarreraId = 2,
                            Nombre = "Redes neuronales",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 49,
                            CarreraId = 2,
                            Nombre = "Lógica difusa",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 50,
                            CarreraId = 2,
                            Nombre = "Sistemas de información geográfica",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 51,
                            CarreraId = 2,
                            Nombre = "Programación de dispositivos móviles",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 52,
                            CarreraId = 2,
                            Nombre = "Normatividad en telecomunicaciones e informática",
                            Semestre = 2
                        },
                        new
                        {
                            Id = 53,
                            CarreraId = 2,
                            Nombre = "Redes inteligentes",
                            Semestre = 3
                        },
                        new
                        {
                            Id = 54,
                            CarreraId = 2,
                            Nombre = "Líneas de transmisión y antenas",
                            Semestre = 3
                        },
                        new
                        {
                            Id = 55,
                            CarreraId = 2,
                            Nombre = "Seguridad en redes",
                            Semestre = 3
                        },
                        new
                        {
                            Id = 56,
                            CarreraId = 2,
                            Nombre = "Multimedia",
                            Semestre = 3
                        },
                        new
                        {
                            Id = 57,
                            CarreraId = 2,
                            Nombre = "Bases de datos distribuidas",
                            Semestre = 3
                        },
                        new
                        {
                            Id = 58,
                            CarreraId = 2,
                            Nombre = "Metodología de la investigación",
                            Semestre = 3
                        },
                        new
                        {
                            Id = 59,
                            CarreraId = 2,
                            Nombre = "Administración de proyectos",
                            Semestre = 3
                        },
                        new
                        {
                            Id = 60,
                            CarreraId = 2,
                            Nombre = "Liderazgo y emprendedores",
                            Semestre = 3
                        },
                        new
                        {
                            Id = 61,
                            CarreraId = 2,
                            Nombre = "Criptografía",
                            Semestre = 3
                        },
                        new
                        {
                            Id = 62,
                            CarreraId = 2,
                            Nombre = "Microondas",
                            Semestre = 3
                        },
                        new
                        {
                            Id = 63,
                            CarreraId = 2,
                            Nombre = "Procesamiento de imágenes",
                            Semestre = 3
                        },
                        new
                        {
                            Id = 64,
                            CarreraId = 2,
                            Nombre = "Televisión digital",
                            Semestre = 3
                        },
                        new
                        {
                            Id = 65,
                            CarreraId = 2,
                            Nombre = "Sistemas de calidad",
                            Semestre = 3
                        },
                        new
                        {
                            Id = 66,
                            CarreraId = 2,
                            Nombre = "Procesamiento de voz",
                            Semestre = 3
                        },
                        new
                        {
                            Id = 67,
                            CarreraId = 2,
                            Nombre = "Filtrado avanzado",
                            Semestre = 3
                        },
                        new
                        {
                            Id = 68,
                            CarreraId = 2,
                            Nombre = "Proyecto terminal I",
                            Semestre = 4
                        },
                        new
                        {
                            Id = 69,
                            CarreraId = 2,
                            Nombre = "Proyecto terminal II",
                            Semestre = 4
                        },
                        new
                        {
                            Id = 70,
                            CarreraId = 2,
                            Nombre = "Redes de telecomunicaciones",
                            Semestre = 4
                        },
                        new
                        {
                            Id = 71,
                            CarreraId = 2,
                            Nombre = "Aplicaciones distribuidas",
                            Semestre = 4
                        },
                        new
                        {
                            Id = 72,
                            CarreraId = 2,
                            Nombre = "Dispositivos programables",
                            Semestre = 4
                        },
                        new
                        {
                            Id = 73,
                            CarreraId = 2,
                            Nombre = "Servicio social",
                            Semestre = 4
                        },
                        new
                        {
                            Id = 74,
                            CarreraId = 2,
                            Nombre = "Electiva I",
                            Semestre = 4
                        },
                        new
                        {
                            Id = 75,
                            CarreraId = 2,
                            Nombre = "Electiva II",
                            Semestre = 4
                        },
                        new
                        {
                            Id = 76,
                            CarreraId = 2,
                            Nombre = "Electiva III",
                            Semestre = 4
                        },
                        new
                        {
                            Id = 77,
                            CarreraId = 2,
                            Nombre = "Electiva IV",
                            Semestre = 4
                        });
                });

            modelBuilder.Entity("PortalCOSIE.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdentityUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PortalCOSIE.Domain.Entities.Alumno", b =>
                {
                    b.HasOne("PortalCOSIE.Domain.Entities.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("CarreraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PortalCOSIE.Domain.Entities.Usuario", "Usuario")
                        .WithOne("Alumno")
                        .HasForeignKey("PortalCOSIE.Domain.Entities.Alumno", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PortalCOSIE.Domain.Entities.Documento", b =>
                {
                    b.HasOne("PortalCOSIE.Domain.Entities.Tramite", "Tramite")
                        .WithMany()
                        .HasForeignKey("TramiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tramite");
                });

            modelBuilder.Entity("PortalCOSIE.Domain.Entities.Personal", b =>
                {
                    b.HasOne("PortalCOSIE.Domain.Entities.Usuario", "Usuario")
                        .WithOne("Personal")
                        .HasForeignKey("PortalCOSIE.Domain.Entities.Personal", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PortalCOSIE.Domain.Entities.Tramite", b =>
                {
                    b.HasOne("PortalCOSIE.Domain.Entities.Alumno", "Alumno")
                        .WithMany()
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PortalCOSIE.Domain.Entities.Personal", "Personal")
                        .WithMany()
                        .HasForeignKey("PersonalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("PortalCOSIE.Domain.Entities.UnidadAprendizaje", b =>
                {
                    b.HasOne("PortalCOSIE.Domain.Entities.Carrera", "Carrera")
                        .WithMany("UnidadesAprendizaje")
                        .HasForeignKey("CarreraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("PortalCOSIE.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("IdentityUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PortalCOSIE.Domain.Entities.Carrera", b =>
                {
                    b.Navigation("UnidadesAprendizaje");
                });

            modelBuilder.Entity("PortalCOSIE.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Alumno")
                        .IsRequired();

                    b.Navigation("Personal")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
