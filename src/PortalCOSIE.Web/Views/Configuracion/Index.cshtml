@{
    ViewData["Title"] = "Configuración del portal";
}

<div class="card shadow">
    <div class="card-header d-flex justify-content-between align-items-center">
        <div>
            <h6 class="mb-0 py-1"><i class="fas fa-cogs me-2"></i>@ViewData["Title"]</h6>
        </div>
    </div>

    <div class="card-body overflow-auto p-4" style="height: calc(100vh - 164px);">
        <!-- Tabs -->
        <ul class="nav nav-tabs small" id="configTabs" role="tablist">
            <li class="nav-item">
                <button class="nav-link active"
                        data-bs-toggle="tab"
                        data-bs-target="#periodos"
                        data-action="@Url.Action("Periodos", "Configuracion")"
                        type="button">
                    <i class="fas fa-calendar-alt me-2"></i>Periodos
                </button>
            </li>
            <li class="nav-item">
                <button class="nav-link"
                        data-bs-toggle="tab"
                        data-bs-target="#carreras"
                        data-action="@Url.Action("Carreras", "Configuracion")"
                        type="button">
                    <i class="fas fa-graduation-cap me-2"></i>Carreras
                </button>
            </li>
            <li class="nav-item">
                <button class="nav-link"
                        data-bs-toggle="tab"
                        data-bs-target="#tipo"
                        data-action="@Url.Action("Tipo", "Configuracion")"
                        type="button">
                    <i class="fas fa-tasks me-2"></i>Tipo trámite
                </button>
            </li>
            <li class="nav-item">
                <button class="nav-link"
                        data-bs-toggle="tab"
                        data-bs-target="#estadoTramite"
                        data-action="@Url.Action("Estados", "Configuracion")"
                        type="button">
                    <i class="fas fa-clipboard-check me-2"></i>Estado trámite
                </button>
            </li>
            <li class="nav-item">
                <button class="nav-link"
                        data-bs-toggle="tab"
                        data-bs-target="#estadoDocumento"
                        data-action="@Url.Action("EstadosDocumento", "Configuracion")"
                        type="button">
                    <i class="fas fa-file-alt me-2"></i>Estado documento
                </button>
            </li>
        </ul>

        <!-- Contenedores de contenido -->
        <div class="tab-content">
            <div class="tab-pane fade show active" id="periodos"></div>
            <div class="tab-pane fade" id="carreras"></div>
            <div class="tab-pane fade" id="tipo"></div>
            <div class="tab-pane fade" id="estadoTramite"></div>
            <div class="tab-pane fade" id="estadoDocumento"></div>
        </div>
    </div>
</div>

<!-- Modal Genérico para Crear/Editar -->
<div class="modal fade" id="genericModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="genericForm" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" id="genericId" name="id" />
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="genericModalTitle">
                        <i class="fas fa-edit me-2"></i>Editar
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="genericNombre" class="form-label fw-semibold">
                            <i class="fas fa-tag me-1"></i>Nombre
                        </label>
                        <input type="text" class="form-control" id="genericNombre" name="nombre" required
                               placeholder="Ingrese el nombre" maxlength="100">
                        <div class="form-text text-muted">
                            <i class="fas fa-info-circle me-1"></i>Máximo 100 caracteres
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>Cancelar
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save me-1"></i>Guardar
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Genérico para Toggle (Activar/Desactivar) -->
<div class="modal fade" id="toggleGenericModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="toggleGenericForm" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-header" id="toggleGenericModalHeader">
                    <h5 class="modal-title" id="toggleGenericModalTitle">
                        <i class="fas fa-exchange-alt me-2"></i>Cambiar estado
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="alert" id="toggleGenericAlert">
                        <div class="d-flex">
                            <i class="fas fa-2x me-3" id="toggleGenericAlertIcon"></i>
                            <div>
                                <h6 class="alert-heading mb-2" id="toggleGenericAlertTitle">Cambio de estado</h6>
                                <p id="toggleGenericAlertMessage" class="mb-0">
                                    Esta acción cambiará la visibilidad del registro en el sistema.
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <p class="fw-semibold mb-2" id="toggleGenericQuestion">¿Está seguro de cambiar el estado?</p>
                        <div class="card" id="toggleGenericCard">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-4"><strong class="text-muted">ID:</strong></div>
                                    <div class="col-8"><span id="toggleGenericId" class="fw-bold"></span></div>
                                </div>
                                <div class="row mt-2">
                                    <div class="col-4"><strong class="text-muted">Nombre:</strong></div>
                                    <div class="col-8"><span id="toggleGenericName" class="fw-bold"></span></div>
                                </div>
                                <div class="row mt-2">
                                    <div class="col-4"><strong class="text-muted">Estado actual:</strong></div>
                                    <div class="col-8">
                                        <span class="badge" id="toggleGenericCurrentStatus"></span>
                                    </div>
                                </div>
                                <div class="row mt-2">
                                    <div class="col-4"><strong class="text-muted">Nuevo estado:</strong></div>
                                    <div class="col-8">
                                        <span class="badge" id="toggleGenericNewStatus"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <input type="hidden" id="toggleGenericIdInput" name="id" />
                    <input type="hidden" id="toggleGenericCurrentState" name="currentState" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>Cancelar
                    </button>
                    <button type="submit" class="btn" id="toggleGenericSubmitBtn">
                        <i class="fas me-1" id="toggleGenericSubmitIcon"></i>
                        <span id="toggleGenericSubmitText">Cambiar estado</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Modal Genérico Crear/Editar
        const openGenericModal = (options) => {
            const config = {
                title: 'Editar',
                action: '',
                id: '',
                nombre: '',
                placeholder: 'Ingrese el nombre',
                icon: 'fas fa-edit',
                ...options
            };

            $('#genericModalTitle').html(`<i class="${config.icon} me-2"></i>${config.title}`);
            $('#genericForm').attr('action', config.action);
            $('#genericId').val(config.id);
            $('#genericNombre').val(config.nombre).attr('placeholder', config.placeholder);

            $('#genericModal').modal('show');
            $('#genericNombre').focus().select();
        };

        // Modal Genérico toggle
        const openToggleModal = (options) => {
            const config = {
                title: 'Cambiar estado',
                action: '',
                id: '',
                name: '',
                estadoActual: '',
                entityName: 'elemento',
                ...options
            };

            if (config.estadoActual == 'False') {
                // Actualmente ACTIVO → cambiar a INACTIVO
                $('#toggleGenericModalHeader').removeClass('bg-success').addClass('bg-danger text-white');
                $('#toggleGenericAlert').removeClass('alert-success border-success').addClass('alert-warning border-warning');
                $('#toggleGenericAlertIcon').removeClass('fa-check-circle text-success').addClass('fa-exclamation-triangle text-warning');
                $('#toggleGenericCard').removeClass('border-success').addClass('border-danger');
                $('#toggleGenericSubmitBtn').removeClass('btn-success').addClass('btn-danger');
                $('#toggleGenericSubmitIcon').removeClass('fa-eye').addClass('fa-eye-slash');
                $('#toggleGenericSubmitText').text('Desactivar');

                $('#toggleGenericCurrentStatus').removeClass('bg-danger').addClass('bg-success').text('Activo');
                $('#toggleGenericNewStatus').removeClass('bg-success').addClass('bg-danger').text('Inactivo');

                $('#toggleGenericAlertTitle').text('Desactivar registro');
                $('#toggleGenericAlertMessage').text('Esta acción ocultará el registro en el sistema, sin embargo no afecta acciones pasadas.');
                $('#toggleGenericQuestion').text(`¿Está seguro de desactivar el siguiente ${config.entityName}?`);
            } else {
                // Actualmente INACTIVO → cambiar a ACTIVO
                $('#toggleGenericModalHeader').removeClass('bg-danger').addClass('bg-success text-white');
                $('#toggleGenericAlert').removeClass('alert-warning border-warning').addClass('alert-success border-success');
                $('#toggleGenericAlertIcon').removeClass('fa-exclamation-triangle text-warning').addClass('fa-check-circle text-success');
                $('#toggleGenericCard').removeClass('border-danger').addClass('border-success');
                $('#toggleGenericSubmitBtn').removeClass('btn-danger').addClass('btn-success');
                $('#toggleGenericSubmitIcon').removeClass('fa-eye-slash').addClass('fa-eye');
                $('#toggleGenericSubmitText').text('Activar');

                $('#toggleGenericCurrentStatus').removeClass('bg-success').addClass('bg-danger').text('Inactivo');
                $('#toggleGenericNewStatus').removeClass('bg-danger').addClass('bg-success').text('Activo');

                $('#toggleGenericAlertTitle').text('Activar registro');
                $('#toggleGenericAlertMessage').text('Esta acción hará visible el registro en el sistema.');
                $('#toggleGenericQuestion').text(`¿Está seguro de activar el siguiente ${config.entityName}?`);
            }

            // Configurar datos
            $('#toggleGenericModalTitle').html(`<i class="fas fa-exchange-alt me-2"></i>${config.title}`);
            $('#toggleGenericForm').attr('action', config.action);
            $('#toggleGenericId').text(config.id);
            $('#toggleGenericName').text(config.name);
            $('#toggleGenericIdInput').val(config.id);
            $('#toggleGenericCurrentState').val(config.estadoActual);

            $('#toggleGenericModal').modal('show');
        };

        // Event Handlers
        $(document)
            .on('submit', '#genericForm', function(e) {
                const nombre = $('#genericNombre').val().trim();
                if (!nombre || nombre.length > 100) {
                    e.preventDefault();
                    alert(!nombre ? 'Por favor ingrese el nombre' : 'El nombre no puede exceder los 100 caracteres');
                    $('#genericNombre').focus();
                    return false;
                }
                return true;
            })
            .on('click', '.generic-edit', function() {
                const $btn = $(this);
                openGenericModal({
                    title: $btn.data('title'),
                    action: $btn.data('action'),
                    id: $btn.data('id'),
                    nombre: $btn.data('nombre'),
                    placeholder: $btn.data('placeholder'),
                    icon: $btn.data('icon')
                });
            })
            .on('click', '.generic-create', function() {
                const $btn = $(this);
                openGenericModal({
                    title: $btn.data('title'),
                    action: $btn.data('action'),
                    id: '',
                    nombre: '',
                    placeholder: $btn.data('placeholder'),
                    icon: $btn.data('icon')
                });
            })
            .on('click', '.generic-toggle', function() {
                const $btn = $(this);
                const entity = $btn.data('entity') || 'elemento';

                openToggleModal({
                    title: `Cambiar estado`,
                    action: $btn.data('action'),
                    id: $btn.data('id'),
                    name: $btn.data('name'),
                    estadoActual: $btn.data('estado-actual'),
                    entityName: entity
                });
            })
            .on('hidden.bs.modal', '#genericModal, #toggleGenericModal', function() {
                $(this).find('form')[0].reset();
                $(this).find('input[type="hidden"]').val('');
            });

        $(document).ready(function () {
            const loadTabConfig = (tabButton) => {
                const $button = $(tabButton);
                const target = $button.data('bs-target');
                const action = $button.data('action');
                const $container = $(target);

                if ($container.data('loaded')) return;

                $.get(action)
                    .done(data => {
                        $container.html(data).data('loaded', true);
                    })
                    .fail(() => {
                        $container.html('<div class="text-danger p-3">Error al cargar el contenido.</div>');
                    });
            };

            // Cargar tab activo inicial
            loadTabConfig($('.nav-link.active')[0]);

            // Cargar tabs al cambiar
            $('.nav-link').on('shown.bs.tab', e => loadTabConfig(e.target));
        });
    </script>
}
